{"version":3,"sources":["style/powered-by-foursquare-grey.png","components/search_bar.js","components/venue_list_item.js","components/venue_list.js","components/attribution.js","components/map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","query","_this2","react_default","a","createElement","className","value","onChange","event","onInputChange","target","setState","onSearchQueryChange","Component","VenueListItem","_ref","venue","onVenueSelect","photoUrl","photo","concat","prefix","suffix","venueUrl","id","venueAddress","location","formattedAddress","rating","onClick","src","href","name","VenueList","venueItems","venues","map","venue_list_item","key","Attribution","FoursquareLogo","React","Mapbox","ReactMapboxGl","accessToken","Map","features","popups","center","coordinates","forEach","coordinate","lng","lat","venueName","push","lib_esm","anchor","selectedVenue","window","open","url","style","containerStyle","height","width","zoom","type","layout","icon-image","attribution","foursquare","require","clientID","clientSecret","App","undefined","venueSearch","recommendations","ll","limit","then","res","response","group","results","sort","b","_this3","search_bar","venue_list","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcd48ef1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/powered-by-foursquare-grey.cdd335d8.png\";","import React, { Component } from \"react\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { query: \"\" };\n  }\n\n  render() {\n    return (\n      <div className=\"search-bar\">\n        <input\n          value={this.state.query}\n          onChange={event => this.onInputChange(event.target.value)}\n        />\n      </div>\n    );\n  }\n  onInputChange(query) {\n    this.setState({ query });\n    this.props.onSearchQueryChange(query);\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst VenueListItem = ({ venue, onVenueSelect }) => {\n  const photoUrl = venue.photo\n    ? `${venue.photo.prefix}200x200${venue.photo.suffix}`\n    : \"https://source.unsplash.com/random/200x200\";\n  const venueUrl = `https://foursquare.com/v/${venue.venue.id}`;\n  const venueAddress = venue.venue.location.formattedAddress[0];\n  const rating = venue.venue.rating;\n  return (\n    <li onClick={() => onVenueSelect(venue)} className=\"list-group-item\">\n      <div className=\"venue-list media\">\n        <div className=\"media-left\">\n          <img className=\"media-object\" src={photoUrl} />\n        </div>\n        <div className=\"media-body\">\n          <div className=\"media-heading\">\n            <a href={venueUrl} target=\"_blank\">\n              {venue.venue.name}\n            </a>\n          </div>\n          <div>{venueAddress}</div>\n          <div className=\"rating\">{rating}</div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default VenueListItem;\n","import React from \"react\";\nimport VenueListItem from \"./venue_list_item\";\n\nconst VenueList = props => {\n  const venueItems = props.venues.map(venue => {\n    return (\n      <VenueListItem\n        key={venue.id}\n        venue={venue}\n        onVenueSelect={props.onVenueSelect}\n      />\n    );\n  });\n  return <ul className=\"col-md-6 list-group\">{venueItems}</ul>;\n};\n\nexport default VenueList;\n","import React from \"react\";\nimport FoursquareLogo from '../style/powered-by-foursquare-grey.png';\n\nclass Attribution extends React.Component {\n  render() {\n    return (\n      <div className=\"col-md-6\">\n        <img\n          className=\"attribution\"\n          src={FoursquareLogo}\n        />\n      </div>\n    );\n  }\n}\nexport default Attribution;\n","import React, { Component } from \"react\";\nimport ReactMapboxGl, { Layer, Feature, Popup } from \"react-mapbox-gl\";\nimport Attribution from \"./attribution\";\n\nconst Mapbox = ReactMapboxGl({\n  accessToken:\n    \"pk.eyJ1IjoiY3dhbmcyNDIyIiwiYSI6ImNqa3d4Z2F2cjAycG4zdXBnZTZid2J2bmMifQ.BFrd_zsyMxGq6zTyiPMH2A\"\n});\n\n// Create a feature and popup component for each venue\nconst Map = props => {\n  const features = [];\n  const popups = [];\n  let center = [-122.4194, 37.7749];\n  // console.log(props);\n  const coord = props.coordinates.forEach(coordinate => {\n    const lng = coordinate.venue.location.lng;\n    // console.log(props.selectedVenue);\n    const lat = coordinate.venue.location.lat;\n    const id = coordinate.id;\n    const venueName = coordinate.venue.name;\n    const url = () => window.open(coordinate.venue.url);\n    features.push(<Feature key={id} coordinates={[lng, lat]} />);\n    popups.push(\n      <Popup\n        key={id}\n        coordinates={[lng, lat]}\n        anchor=\"bottom\"\n        className={props.selectedVenue == id ? \"selected-popup\" : \"popup\"}\n        onClick={url}\n      >\n        <p>{venueName}</p>\n      </Popup>\n    );\n    if (coordinate.id == props.selectedVenue) {\n      center = [coordinate.venue.location.lng, coordinate.venue.location.lat];\n    }\n  });\n\n  return (\n    <div className=\"col-md-6\">\n      <Mapbox\n        style=\"mapbox://styles/mapbox/streets-v8\"\n        containerStyle={{\n          height: \"400px\",\n          width: \"100%\"\n        }}\n        center={center}\n        zoom={[15]}\n      >\n        <Layer type=\"symbol\" id=\"marker\" layout={{ \"icon-image\": \"marker-15\" }}>\n          {features}\n        </Layer>\n        {popups}\n      </Mapbox>\n      <Attribution />\n    </div>\n  );\n};\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SearchBar from \"./components/search_bar\";\nimport VenueList from \"./components/venue_list\";\nimport VenueDetail from \"./components/venue_detail\";\nimport Map from \"./components/map\";\nimport Attribution from \"./components/attribution\";\n\nimport './App.css';\n\nconst CLIENT_ID = \"TSQSZARZBQHF00L4C2ILSDCZETKWHT41ZXOKRJNJ3TN0N0BT\";\nconst CLIENT_SECRET = \"ODFB344IIV311HQBFHLNYZSHIVBAEGNU5K2YGQ3LLBJYQNLM\";\n\nconst foursquare = require(\"react-foursquare\")({\n  clientID: CLIENT_ID,\n  clientSecret: CLIENT_SECRET // is this safe to expose into the browser?\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      venues: [],\n      selectedVenue: undefined\n    };\n    this.venueSearch(\"coffee\");\n  }\n\n  venueSearch(query) {\n    foursquare.venues\n      .recommendations({\n        ll: \"37.7749,-122.4194\",\n        query: query,\n        limit: 10\n      })\n      .then(res =>\n        res.response.group.results.sort(\n          (a, b) => b.venue.rating - a.venue.rating\n        )\n      )\n      .then(venues =>\n        this.setState({\n          selectedVenue: null,\n          venues: venues\n        })\n      );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"intro-text\">Find me the best...</div>\n        <SearchBar onSearchQueryChange={query => this.venueSearch(query)} />\n        <Map\n          coordinates={this.state.venues}\n          selectedVenue={this.state.selectedVenue}\n        />\n        <VenueList\n          onVenueSelect={venue => this.setState({ selectedVenue: venue.id })}\n          venues={this.state.venues}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}